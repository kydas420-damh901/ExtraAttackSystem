using System;
using System.Collections.Generic;

// Token: 0x020001E6 RID: 486
public class ZRoutedRpc
{
	// Token: 0x170000E6 RID: 230
	// (get) Token: 0x060012B4 RID: 4788 RVA: 0x00016BCC File Offset: 0x00014DCC
	public static ZRoutedRpc instance
	{
		get
		{
			return ZRoutedRpc.s_instance;
		}
	}

	// Token: 0x060012B5 RID: 4789 RVA: 0x00016BD3 File Offset: 0x00014DD3
	public ZRoutedRpc(bool server)
	{
		ZRoutedRpc.s_instance = this;
		this.m_server = server;
	}

	// Token: 0x060012B6 RID: 4790 RVA: 0x00016C05 File Offset: 0x00014E05
	public void SetUID(long uid)
	{
		this.m_id = uid;
	}

	// Token: 0x060012B7 RID: 4791 RVA: 0x00094FB8 File Offset: 0x000931B8
	public void AddPeer(ZNetPeer peer)
	{
		this.m_peers.Add(peer);
		peer.m_rpc.Register<ZPackage>("RoutedRPC", new Action<ZRpc, ZPackage>(this.RPC_RoutedRPC));
		if (this.m_onNewPeer != null)
		{
			this.m_onNewPeer(peer.m_uid);
		}
	}

	// Token: 0x060012B8 RID: 4792 RVA: 0x00016C0E File Offset: 0x00014E0E
	public void RemovePeer(ZNetPeer peer)
	{
		this.m_peers.Remove(peer);
	}

	// Token: 0x060012B9 RID: 4793 RVA: 0x00095008 File Offset: 0x00093208
	private ZNetPeer GetPeer(long uid)
	{
		foreach (ZNetPeer znetPeer in this.m_peers)
		{
			if (znetPeer.m_uid == uid)
			{
				return znetPeer;
			}
		}
		return null;
	}

	// Token: 0x060012BA RID: 4794 RVA: 0x00016C1D File Offset: 0x00014E1D
	public void InvokeRoutedRPC(long targetPeerID, string methodName, params object[] parameters)
	{
		this.InvokeRoutedRPC(targetPeerID, ZDOID.None, methodName, parameters);
	}

	// Token: 0x060012BB RID: 4795 RVA: 0x00016C2D File Offset: 0x00014E2D
	public void InvokeRoutedRPC(string methodName, params object[] parameters)
	{
		this.InvokeRoutedRPC(this.GetServerPeerID(), methodName, parameters);
	}

	// Token: 0x060012BC RID: 4796 RVA: 0x00016C3D File Offset: 0x00014E3D
	private long GetServerPeerID()
	{
		if (this.m_server)
		{
			return this.m_id;
		}
		if (this.m_peers.Count > 0)
		{
			return this.m_peers[0].m_uid;
		}
		return 0L;
	}

	// Token: 0x060012BD RID: 4797 RVA: 0x00095064 File Offset: 0x00093264
	public void InvokeRoutedRPC(long targetPeerID, ZDOID targetZDO, string methodName, params object[] parameters)
	{
		ZRoutedRpc.RoutedRPCData routedRPCData = new ZRoutedRpc.RoutedRPCData();
		ZRoutedRpc.RoutedRPCData routedRPCData2 = routedRPCData;
		long id = this.m_id;
		int rpcMsgID = this.m_rpcMsgID;
		this.m_rpcMsgID = rpcMsgID + 1;
		routedRPCData2.m_msgID = id + (long)rpcMsgID;
		routedRPCData.m_senderPeerID = this.m_id;
		routedRPCData.m_targetPeerID = targetPeerID;
		routedRPCData.m_targetZDO = targetZDO;
		routedRPCData.m_methodHash = methodName.GetStableHashCode();
		ZRpc.Serialize(parameters, ref routedRPCData.m_parameters);
		routedRPCData.m_parameters.SetPos(0);
		if (targetPeerID == this.m_id || targetPeerID == 0L)
		{
			this.HandleRoutedRPC(routedRPCData);
		}
		if (targetPeerID != this.m_id)
		{
			this.RouteRPC(routedRPCData);
		}
	}

	// Token: 0x060012BE RID: 4798 RVA: 0x000950F8 File Offset: 0x000932F8
	private void RouteRPC(ZRoutedRpc.RoutedRPCData rpcData)
	{
		ZPackage zpackage = new ZPackage();
		rpcData.Serialize(zpackage);
		if (this.m_server)
		{
			if (rpcData.m_targetPeerID != 0L)
			{
				ZNetPeer peer = this.GetPeer(rpcData.m_targetPeerID);
				if (peer != null && peer.IsReady())
				{
					peer.m_rpc.Invoke("RoutedRPC", new object[]
					{
						zpackage
					});
					return;
				}
				return;
			}
			else
			{
				using (List<ZNetPeer>.Enumerator enumerator = this.m_peers.GetEnumerator())
				{
					while (enumerator.MoveNext())
					{
						ZNetPeer znetPeer = enumerator.Current;
						if (rpcData.m_senderPeerID != znetPeer.m_uid && znetPeer.IsReady())
						{
							znetPeer.m_rpc.Invoke("RoutedRPC", new object[]
							{
								zpackage
							});
						}
					}
					return;
				}
			}
		}
		foreach (ZNetPeer znetPeer2 in this.m_peers)
		{
			if (znetPeer2.IsReady())
			{
				znetPeer2.m_rpc.Invoke("RoutedRPC", new object[]
				{
					zpackage
				});
			}
		}
	}

	// Token: 0x060012BF RID: 4799 RVA: 0x00095230 File Offset: 0x00093430
	private void RPC_RoutedRPC(ZRpc rpc, ZPackage pkg)
	{
		ZRoutedRpc.RoutedRPCData routedRPCData = new ZRoutedRpc.RoutedRPCData();
		routedRPCData.Deserialize(pkg);
		if (routedRPCData.m_targetPeerID == this.m_id || routedRPCData.m_targetPeerID == 0L)
		{
			this.HandleRoutedRPC(routedRPCData);
		}
		if (this.m_server && routedRPCData.m_targetPeerID != this.m_id)
		{
			this.RouteRPC(routedRPCData);
		}
	}

	// Token: 0x060012C0 RID: 4800 RVA: 0x00095284 File Offset: 0x00093484
	private void HandleRoutedRPC(ZRoutedRpc.RoutedRPCData data)
	{
		if (data.m_targetZDO.IsNone())
		{
			RoutedMethodBase routedMethodBase;
			if (this.m_functions.TryGetValue(data.m_methodHash, out routedMethodBase))
			{
				routedMethodBase.Invoke(data.m_senderPeerID, data.m_parameters);
				return;
			}
		}
		else
		{
			ZDO zdo = ZDOMan.instance.GetZDO(data.m_targetZDO);
			if (zdo != null)
			{
				ZNetView znetView = ZNetScene.instance.FindInstance(zdo);
				if (znetView != null)
				{
					znetView.HandleRoutedRPC(data);
				}
			}
		}
	}

	// Token: 0x060012C1 RID: 4801 RVA: 0x00016C70 File Offset: 0x00014E70
	public void Register(string name, Action<long> f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod(f));
	}

	// Token: 0x060012C2 RID: 4802 RVA: 0x00016C89 File Offset: 0x00014E89
	public void Register<T>(string name, Action<long, T> f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod<T>(f));
	}

	// Token: 0x060012C3 RID: 4803 RVA: 0x00016CA2 File Offset: 0x00014EA2
	public void Register<T, U>(string name, Action<long, T, U> f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod<T, U>(f));
	}

	// Token: 0x060012C4 RID: 4804 RVA: 0x00016CBB File Offset: 0x00014EBB
	public void Register<T, U, V>(string name, Action<long, T, U, V> f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod<T, U, V>(f));
	}

	// Token: 0x060012C5 RID: 4805 RVA: 0x00016CD4 File Offset: 0x00014ED4
	public void Register<T, U, V, B>(string name, RoutedMethod<T, U, V, B>.Method f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod<T, U, V, B>(f));
	}

	// Token: 0x060012C6 RID: 4806 RVA: 0x00016CED File Offset: 0x00014EED
	public void Register<T, U, V, B, K>(string name, RoutedMethod<T, U, V, B, K>.Method f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod<T, U, V, B, K>(f));
	}

	// Token: 0x060012C7 RID: 4807 RVA: 0x00016D06 File Offset: 0x00014F06
	public void Register<T, U, V, B, K, M>(string name, RoutedMethod<T, U, V, B, K, M>.Method f)
	{
		this.m_functions.Add(name.GetStableHashCode(), new RoutedMethod<T, U, V, B, K, M>(f));
	}

	// Token: 0x04001495 RID: 5269
	public static long Everybody;

	// Token: 0x04001496 RID: 5270
	public Action<long> m_onNewPeer;

	// Token: 0x04001497 RID: 5271
	private int m_rpcMsgID = 1;

	// Token: 0x04001498 RID: 5272
	private bool m_server;

	// Token: 0x04001499 RID: 5273
	private long m_id;

	// Token: 0x0400149A RID: 5274
	private readonly List<ZNetPeer> m_peers = new List<ZNetPeer>();

	// Token: 0x0400149B RID: 5275
	private readonly Dictionary<int, RoutedMethodBase> m_functions = new Dictionary<int, RoutedMethodBase>();

	// Token: 0x0400149C RID: 5276
	private static ZRoutedRpc s_instance;

	// Token: 0x020001E7 RID: 487
	public class RoutedRPCData
	{
		// Token: 0x060012C8 RID: 4808 RVA: 0x000952F8 File Offset: 0x000934F8
		public void Serialize(ZPackage pkg)
		{
			pkg.Write(this.m_msgID);
			pkg.Write(this.m_senderPeerID);
			pkg.Write(this.m_targetPeerID);
			pkg.Write(this.m_targetZDO);
			pkg.Write(this.m_methodHash);
			pkg.Write(this.m_parameters);
		}

		// Token: 0x060012C9 RID: 4809 RVA: 0x00095350 File Offset: 0x00093550
		public void Deserialize(ZPackage pkg)
		{
			this.m_msgID = pkg.ReadLong();
			this.m_senderPeerID = pkg.ReadLong();
			this.m_targetPeerID = pkg.ReadLong();
			this.m_targetZDO = pkg.ReadZDOID();
			this.m_methodHash = pkg.ReadInt();
			this.m_parameters = pkg.ReadPackage();
		}

		// Token: 0x0400149D RID: 5277
		public long m_msgID;

		// Token: 0x0400149E RID: 5278
		public long m_senderPeerID;

		// Token: 0x0400149F RID: 5279
		public long m_targetPeerID;

		// Token: 0x040014A0 RID: 5280
		public ZDOID m_targetZDO;

		// Token: 0x040014A1 RID: 5281
		public int m_methodHash;

		// Token: 0x040014A2 RID: 5282
		public ZPackage m_parameters = new ZPackage();
	}
}
